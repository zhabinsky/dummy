{"version":3,"sources":["components/Button.js","components/Card.js","hooks/useWindowSize.js","contexts/Dimensions.js","components/Hand.js","Game.js","App.js","index.js"],"names":["Button","value","suit","disabled","className","children","onClick","props","Container","classnames","undefined","Text","styled","button","div","Card","CardImage","src","alt","p","currentSize","window","innerWidth","innerHeight","useWindowSize","useState","size","setSize","useEffect","handleResize","addEventListener","removeEventListener","Context","createContext","Provider","useWindowWidth","Hand","cards","cardsRaw","onSelectedCards","selectedCards","setSelectedCards","useContext","width","height","handHeight","Math","min","cardWidth","cardHeight","cardSpacing","cardElevation","estimatedHandWidth","hasSelectedCards","length","lineCapacity","y","counts","map","card","i","id","selectedIndex","indexOf","isSelected","x","mapCardIds","ButtonStyled","style","bottom","opacity","format","RelativeContainer","myX","totalInLine","reduce","acc","c","lift","shift","blurred","rotate","CardStyled","navigator","vibrate","left","transform","zIndex","filter","e","top","position","n","Game","JSON","stringify","App","Dimensions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd360329.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\n\nconst Button = ({\n  value,\n  suit,\n  disabled,\n  className,\n  children,\n  onClick,\n  ...props\n}) => {\n  return (\n    <Container\n      {...props}\n      className={classnames(className, { disabled })}\n      onClick={disabled ? undefined : onClick}\n    >\n      <Text>{children}</Text>\n    </Container>\n  );\n};\n\nexport default Button;\n\nconst Container = styled.button`\n  user-select: none;\n  padding: 12px 25px;\n  border-radius: 20px;\n  border: 1px solid yellow;\n  background: transparent;\n  color: yellow;\n\n  :focus {\n    outline: none;\n  }\n\n  cursor: pointer;\n`;\n\nconst Text = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Card = ({ value, suit, children, ...props }) => {\n  return (\n    <Container {...props}>\n      <CardImage src={`/cards/${value}-${suit}.svg`} alt=\"\" />\n    </Container>\n  );\n};\n\nexport default Card;\n\nconst Container = styled.div``;\n\nconst CardImage = styled.div`\n  width: 100%;\n  height: 100%;\n  content: \" \";\n  background-image: url(${(p) => p.src});\n  background-size: contain;\n  border-radius: 3px;\n  overflow: hidden;\n  filter: drop-shadow(0 0 2px black);\n  background-repeat: no-repeat;\n`;\n","import { useState, useEffect } from \"react\";\n\nconst currentSize = () => [window.innerWidth, window.innerHeight];\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(currentSize());\n\n  useEffect(() => {\n    const handleResize = () => setSize(currentSize());\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return size;\n};\n\nexport default useWindowSize;\n","import { createContext, useContext } from \"react\";\nimport useWindowWidth from \"../hooks/useWindowSize\";\n\nconst Context = createContext(0);\n\nexport default ({ children }) => (\n  <Context.Provider value={useWindowWidth()}>{children}</Context.Provider>\n);\n\nexport const useWindowSize = () => useContext(Context);\n","import React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport styled from \"styled-components\";\nimport { useWindowSize } from \"../contexts/Dimensions\";\nimport classnames from \"classnames\";\nimport Button from \"./Button\";\n\nconst mapCardIds = (cards, { selectedCards, lineCapacity }) => {\n  let y = 0;\n  let x = 0;\n\n  const counts = {};\n\n  const mapped = cards.map((card, i) => {\n    const id = card.suit + \"/\" + card.value;\n    const selectedIndex = selectedCards.indexOf(id);\n    const isSelected = selectedIndex !== -1;\n\n    const x = i % lineCapacity;\n\n    if (i > 0 && x === 0 && counts[y] > 0) y++;\n    if (!counts[y]) counts[y] = 0;\n    if (!isSelected) counts[y]++;\n\n    return {\n      ...card,\n      selectedIndex,\n      isSelected,\n      x,\n      y,\n      id,\n    };\n  });\n\n  return mapped;\n};\n\nexport default function Hand({ cards: cardsRaw = [], onSelectedCards }) {\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [width, height] = useWindowSize();\n\n  const lineCapacity = 4;\n  const handHeight = Math.min(height / 4, 400);\n  const cardWidth = Math.min(220, width * 0.34);\n  const cardHeight = (cardWidth * 1) / 0.68;\n  const cardSpacing = cardWidth * 0.35;\n  const cardElevation = cardHeight * 0.25;\n  const estimatedHandWidth = cardWidth + (lineCapacity - 1) * cardSpacing;\n  const hasSelectedCards = selectedCards.length > 0;\n\n  const cards = mapCardIds(cardsRaw, { selectedCards, lineCapacity });\n\n  return (\n    <Container height={handHeight}>\n      <ButtonStyled\n        disabled={selectedCards.length === 0}\n        style={{\n          bottom: handHeight * 1.5 + cardElevation,\n          opacity: selectedCards.length ? 1 : 0,\n        }}\n      >\n        Throw {selectedCards.length} {format(selectedCards.length)}\n      </ButtonStyled>\n      <RelativeContainer>\n        {/* RENDER NOT SELECTED CARDS */}\n\n        {cards.map((card) => {\n          const { suit, value, id, isSelected, x, y } = card;\n\n          let myX = 0;\n          const totalInLine = cards.reduce((acc, c) => {\n            if (!c.isSelected && c.y === y) {\n              if (c.id === id) {\n                myX = acc;\n              }\n              return acc + 1;\n            } else {\n              return acc;\n            }\n          }, 0);\n\n          const lift = cardElevation * y - cardHeight * 0.6;\n          const shift = myX * cardSpacing;\n          const blurred = hasSelectedCards && !isSelected;\n          const rotate = 6 * (myX - totalInLine / 2);\n\n          return (\n            <CardStyled\n              key={id}\n              suit={suit}\n              value={value}\n              onClick={() => {\n                window.navigator.vibrate(200);\n                if (!isSelected) setSelectedCards([...selectedCards, id]);\n              }}\n              style={{\n                height: cardHeight,\n                width: cardWidth,\n                left: width / 2 - estimatedHandWidth / 2,\n                transform: isSelected\n                  ? `translate(${shift}px, 50vh) rotate(0deg)`\n                  : `translate(${shift}px, ${-lift}px) rotate(${rotate}deg)`,\n                zIndex: 100 - y,\n              }}\n              className={classnames({\n                blurred,\n              })}\n            />\n          );\n        })}\n\n        {/* RENDER SELECTED CARDS */}\n\n        {cards.map((card) => {\n          const { suit, value, id, isSelected, selectedIndex } = card;\n          const blurred = hasSelectedCards && !isSelected;\n\n          return (\n            <CardStyled\n              key={id}\n              suit={suit}\n              value={value}\n              onClick={() => {\n                window.navigator.vibrate(200);\n                setSelectedCards(selectedCards.filter((e) => e !== id));\n              }}\n              style={{\n                height: cardHeight * 0.6,\n                width: cardWidth * 0.6,\n                top: 50,\n                left: isSelected ? 50 + selectedIndex * 20 : \"100vw\",\n                zIndex: selectedIndex,\n                position: \"fixed\",\n              }}\n              className={classnames({\n                blurred,\n              })}\n            />\n          );\n        })}\n      </RelativeContainer>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  height: ${({ height }) => height}px;\n`;\n\nconst ButtonStyled = styled(Button)`\n  position: absolute;\n  bottom: 0px;\n  left: 50vw;\n  transform: translateX(-50%);\n  z-index: 9999;\n  transition: opacity 0.3s;\n`;\n\nconst RelativeContainer = styled.div`\n  position: relative;\n  height: 100%;\n`;\n\nconst CardStyled = styled(Card)`\n  position: absolute;\n  transition: all 0.4s, z-index 0.2s;\n  transition-function: ease-out;\n  bottom: 0;\n  transform-origin: center bottom;\n`;\n\nconst format = (n) => {\n  if (n === 1) {\n    return \"card\";\n  }\n\n  return \"cards\";\n};\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./components/Button\";\nimport Hand from \"./components/Hand\";\n\nconst SUPPORTED_VALUES = [\n  \"1\",\n  \"king\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"jack\",\n  \"queen\",\n  \"king\",\n  \"ace\",\n];\n\nconst SUPPORTED_SUITS = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"];\n\nfunction Game() {\n  const [cards, setCards] = useState([\n    { suit: \"clubs\", value: \"king\" },\n    { suit: \"hearts\", value: \"king\" },\n    { suit: \"spades\", value: \"king\" },\n    { suit: \"diamonds\", value: \"king\" },\n\n    { suit: \"clubs\", value: \"ace\" },\n    { suit: \"hearts\", value: \"ace\" },\n    { suit: \"spades\", value: \"ace\" },\n    { suit: \"diamonds\", value: \"ace\" },\n\n    { suit: \"clubs\", value: \"4\" },\n    { suit: \"hearts\", value: \"4\" },\n    { suit: \"spades\", value: \"4\" },\n    { suit: \"diamonds\", value: \"4\" },\n\n    { suit: \"clubs\", value: \"3\" },\n    { suit: \"hearts\", value: \"3\" },\n    { suit: \"spades\", value: \"3\" },\n    { suit: \"diamonds\", value: \"3\" },\n  ]);\n\n  return (\n    <Container>\n      <pre>{JSON.stringify(cards, null, 3)}</pre>\n\n      <Hand cards={cards} />\n\n      <div>\n        <Button>setCards</Button>\n      </div>\n    </Container>\n  );\n}\n\nexport default Game;\n\nconst Container = styled.div`\n  z-index: 9999;\n`;\n","import Game from \"./Game\";\nimport Dimensions from \"./contexts/Dimensions\";\n\nfunction App() {\n  return (\n    <Dimensions>\n      <Game />\n    </Dimensions>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}